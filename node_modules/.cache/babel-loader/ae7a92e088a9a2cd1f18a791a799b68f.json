{"ast":null,"code":"import _objectSpread from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/ecommerce-shopping-cart/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/ecommerce-shopping-cart/src/components/Products.js\";\nimport React, { Component } from 'react';\nimport util from '../util';\nimport { fetchProducts } from '../actions/index';\nimport { connect } from \"react-redux\";\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products() {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products).call(this));\n\n    _this.handleRemoveFromCart = function (e, product) {\n      console.log('Clicked here', product);\n\n      var cartItems = _this.state.cartItems.filter(function (a) {\n        return a.id !== product.id;\n      });\n\n      _this.setState({\n        cartItems: cartItems\n      });\n    };\n\n    _this.handleAddToCart = function (e, product) {\n      var cartValue = _this.state.cartItems;\n      var productAlreadyInCart = false;\n      cartValue.forEach(function (cp) {\n        if (cp.id === product.id) {\n          cp.count += 1;\n          productAlreadyInCart = true;\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartValue.push(_objectSpread({}, product, {\n          count: 1\n        }));\n      }\n\n      _this.setState({\n        cartItems: cartValue\n      });\n\n      localStorage.setItem('cartItems', JSON.stringify(cartValue));\n      console.log('cart item', cartValue);\n    };\n\n    _this.handleSortChange = function (e) {\n      _this.setState({\n        sort: e.target.value\n      });\n    };\n\n    _this.handleSizeChange = function (e) {\n      _this.setState({\n        size: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchProducts();\n      console.log('Hello data is loading here');\n\n      if (localStorage.getItem('cartItems')) {\n        this.setState({\n          cartItems: JSON.parse(localStorage.getItem('cartItems'))\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productItems = this.props.products.map(function (product) {\n        return React.createElement(\"div\", {\n          className: \"col-md-4\",\n          key: product.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"thumbnail text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\".concat(product.id),\n          onClick: function onClick(e) {\n            return _this2.props.handleAddToCart(e, product);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"products/\".concat(product.sku, \"_2.jpg\"),\n          alt: product.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, product.title)), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, util.formatCurrency(product.price)), React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: function onClick(e) {\n            return _this2.props.handleAddToCart(e, product);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"Add to cart\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, productItems);\n    }\n  }]);\n\n  return Products;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('product listing page', state.productReducer.filteredProducts);\n  return {\n    products: state.productReducer.filteredProducts,\n    filteredProducts: state.productReducer.items,\n    isFreeShipping: state.productReducer.isFreeShipping\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchProducts: fetchProducts\n})(Products);","map":{"version":3,"sources":["/var/www/html/ecommerce-shopping-cart/src/components/Products.js"],"names":["React","Component","util","fetchProducts","connect","Products","handleRemoveFromCart","e","product","console","log","cartItems","state","filter","a","id","setState","handleAddToCart","cartValue","productAlreadyInCart","forEach","cp","count","push","localStorage","setItem","JSON","stringify","handleSortChange","sort","target","value","handleSizeChange","size","props","getItem","parse","productItems","products","map","sku","title","formatCurrency","price","mapStateToProps","productReducer","filteredProducts","items","isFreeShipping"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport util from '../util';\nimport {fetchProducts} from '../actions/index';\nimport { connect } from \"react-redux\";\n\n class Products extends Component {\n    \n    constructor() {\n        super();\n      }\n    \n    componentWillMount() {\n    \n        this.props.fetchProducts();\n        console.log('Hello data is loading here');\n   \n       if (localStorage.getItem('cartItems')) {\n         this.setState({ cartItems: JSON.parse(localStorage.getItem('cartItems')) });\n       }\n\n     }\n\n     handleRemoveFromCart = (e, product) => {\n        console.log('Clicked here',product);\n        const cartItems = this.state.cartItems.filter(a =>a.id!==product.id);\n        this.setState({cartItems:cartItems});\n        \n      }\n    \n      handleAddToCart = (e, product) => {\n        const cartValue = this.state.cartItems;\n        let productAlreadyInCart = false;\n        cartValue.forEach(cp => {\n            if (cp.id === product.id) {\n              cp.count += 1;\n              productAlreadyInCart = true;\n            }\n          });\n          if (!productAlreadyInCart) {\n            cartValue.push({ ...product, count: 1 });\n            }\n          this.setState({cartItems:cartValue});\n          localStorage.setItem('cartItems', JSON.stringify(cartValue));\n    \n        console.log('cart item',cartValue);\n      \n      }\n    \n      // listProducts = () => {\n      //   // this.setState(state => {\n      //   //   if (state.sort !== '') {\n      //   //     state.products.sort((a, b) =>\n      //   //       (state.sort === 'lowestprice'\n      //   //         ? ((a.price > b.price) ? 1 : -1)\n      //   //         : ((a.price < b.price) ? 1 : -1)));\n      //   //   } else {\n      //   //     state.products.sort((a, b) => (a.id > b.id) ? 1 : -1);\n      //   //   }\n      //   //   if (state.size !== '') {\n      //   //     return { filteredProducts: state.products.filter(a => a.availableSizes.indexOf(state.size.toUpperCase()) >= 0) };\n      //   //   }\n      //   //   return { filteredProducts: state.products };\n      //   // })\n      // }\n      handleSortChange = (e) => {\n        this.setState({ sort: e.target.value });\n\n      }\n      handleSizeChange = (e) => {\n        this.setState({ size: e.target.value });\n\n      }\n\n    render() {\n      \n        const productItems = this.props.products.map(product => (\n            <div className=\"col-md-4\" key={product.id}>\n                <div className=\"thumbnail text-center\">\n                    <a href={`#${product.id}`} onClick={(e)=> this.props.handleAddToCart(e, product)}>\n                        <img src={`products/${product.sku}_2.jpg`} alt={product.title} />\n                        <p>{product.title}</p>                        \n                    </a>\n                    <b>{util.formatCurrency(product.price)}</b>\n                    <button className=\"btn btn-primary\" onClick={(e)=> this.props.handleAddToCart(e, product)}>Add to cart</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"row\">\n                {productItems}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n  console.log('product listing page',state.productReducer.filteredProducts);\n  return {\n    products:state.productReducer.filteredProducts,\n    filteredProducts:state.productReducer.items,\n    isFreeShipping:state.productReducer.isFreeShipping,\n    \n  };\n};\n\n  export default connect(mapStateToProps,{fetchProducts})(Products)"]},"metadata":{},"sourceType":"module"}